from collections import Counter
import ipaddress

def print_peer_statistics(discovered_peers):
    ips = [peer['ip'] for peer in discovered_peers]
    ip_counts = Counter(ips)

    def classify_ip(ip):
        try:
            ip_obj = ipaddress.ip_address(ip)
            if ip_obj.is_private:
                return 'Ø¯Ø§Ø®Ù„ÙŠ'
            else:
                return 'Ø®Ø§Ø±Ø¬ÙŠ'
        except ValueError:
            return 'Ù…Ø­Ù„ÙŠ'

    print("\nðŸ“Š Ø¥Ø­ØµØ§Ø¦ÙŠØ© Ø¹Ø¯Ø¯ Ø§Ù„Ø£Ø¬Ù‡Ø²Ø© Ø­Ø³Ø¨ Ø§Ù„Ù†ÙˆØ¹:\n")
    for ip, count in ip_counts.items():
        category = classify_ip(ip)
        print(f"â€¢ {ip} ({category}): {count} Ø¬Ù‡Ø§Ø²")